@using Eurofurence.App.Backoffice.Services
@using Eurofurence.App.Domain.Model.Fragments
@inject ISnackbar Snackbar
@inject IKnowledgeService KnowledgeService

<MudDialog>
    <DialogContent>
        @if (RecordInternal != null)
        {
            <MudTextField T="string" @bind-Value="RecordInternal.Name" Label="Name" />
            <MudSelect @bind-Value="RecordInternal.FragmentType" Label="Type">
                @foreach (LinkFragment.FragmentTypeEnum item in Enum.GetValues(typeof(LinkFragment.FragmentTypeEnum)))
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>
            <MudTextField T="string" @bind-Value="RecordInternal.Target" Label="Target" />
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Save">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private MudDialogInstance? MudDialog { get; set; }

    [Parameter] public LinkFragment? Record { get; set; }

    private LinkFragment? RecordInternal { get; set; }

    private bool Update { get; set; }

    protected override void OnInitialized()
    {
        if (Record == null)
        {
            RecordInternal = new LinkFragment()
                {
                    Id = Guid.NewGuid()
                };
        }
        else
        {
            Update = true;
            RecordInternal = new LinkFragment()
            {
                Id = Record.Id,
                Name = Record.Name,
                FragmentType = Record.FragmentType,
                Target = Record.Target
            };
        }
    }

    private void Cancel() => MudDialog?.Cancel();

    private void Save()
    {
        MudDialog?.Close(DialogResult.Ok(RecordInternal));
    }
}