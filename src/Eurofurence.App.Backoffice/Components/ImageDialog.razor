@using Eurofurence.App.Backoffice.Services
@using Eurofurence.App.Domain.Model.Images
@inject ISnackbar Snackbar
@inject IImageService ImageService

<MudDialog>
    <DialogContent>
        @if (Record != null)
        {
            <MudGrid>
                <MudItem xs="12" md="8" Class="d-flex justify-center align-center" Style="height: 500px;">
                    <MudLink Href="@Record.Url">
                        <MudImage Fluid="true" Width="500" Height="500" ObjectFit="ObjectFit.Contain" Src="@Record.Url" Elevation="25" Class="rounded-lg">
                            @if (string.IsNullOrEmpty(@Record.Url))
                            {
                                <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
                            }
                        </MudImage>
                    </MudLink>
                </MudItem>
                <MudItem xs="12" md="4">
                    <MudPaper Elevation="0">
                        <MudFileUpload T="IBrowserFile" FilesChanged="UploadImage">
                            <ActivatorContent>
                                <MudButton Class="mt-2" Variant="Variant.Filled" Color="Color.Primary"
                                           StartIcon="@Icons.Material.Filled.CloudUpload">
                                    Upload Image
                                </MudButton>
                            </ActivatorContent>
                        </MudFileUpload>
                        <MudTextField Value="Record.Id" Label="ID" ReadOnly="true" Class="mt-2"/>
                        <MudTextField T="string" Value="Record.InternalReference" Label="Name" ReadOnly="true" Class="mt-2"/>
                        <MudTextField Value="Record.SizeInBytes" Label="Size (Bytes)" ReadOnly="true" Class="mt-2"/>
                        <MudTextField Value="Record.MimeType" Label="Mime type" ReadOnly="true" Class="mt-2"/>
                        <MudCheckBox Value="Record.IsRestricted" Label="Restricted to Admins" ReadOnly="true" Class="mt-2"/>
                        <MudItem sm="3" Class="mt-2">
                            <MudTextField Value="Record.Width" Label="Width" ReadOnly="true"/>
                        </MudItem>
                        <MudItem sm="3" Class="mt-2">
                            <MudTextField Value="Record.Height" Label="Height" ReadOnly="true"/>
                        </MudItem>
                    </MudPaper>
                </MudItem>
            </MudGrid>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance? MudDialog { get; set; }

    [Parameter] public ImageWithRelationsResponse? Record { get; set; }

    private bool Update { get; set; }

    protected override void OnInitialized()
    {
        if (Record == null)
        {
            Record = new ImageWithRelationsResponse();
        }
        else
        {
            Update = true;
        }
    }

    private async Task UploadImage(IBrowserFile? file)
    {
        if (file == null || Record == null)
        {
            return;
        }

        ImageRecord? image;
        if (Update)
        {
            image = await ImageService.PutImageAsync(Record.Id, file);
            if (image != null)
            {
                Snackbar.Add("Image updated.", Severity.Success);
            }
            else
            {
                Snackbar.Add("Error updating image.", Severity.Error);
            }
        }
        else
        {
            image = await ImageService.PostImageAsync(file);
            if (image != null)
            {
                Snackbar.Add("Image added.", Severity.Success);
            }
            else
            {
                Snackbar.Add("Error adding image.", Severity.Error);
            }
        }

        if (image != null)
        {
            Record.Id = image.Id;
            Record.InternalReference = image.InternalReference;
            Record.SizeInBytes = image.SizeInBytes;
            Record.MimeType = image.MimeType;
            Record.Width = image.Width;
            Record.Height = image.Height;
            Record.Url = image.Url + "?" + Guid.NewGuid();
        }

        StateHasChanged();
    }

    private void Close()
    {
        MudDialog?.Close(DialogResult.Ok(true));
    }

}