@using Eurofurence.App.Backoffice.Services
@using Eurofurence.App.Domain.Model.Images
@inject ISnackbar Snackbar
@inject IImageService ImageService

<MudDialog>
    <DialogContent>
        @if (Record != null)
        {
            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                <MudContainer Style="height: 600px" Class="overflow-scroll pr-4">
                    <MudGrid>
                        <MudItem xs="6">
                            <MudImage ObjectFit="ObjectFit.Contain" Height="500" Width="500" Class="ml-2" Src="@_imageSource">
                                @if (string.IsNullOrEmpty(_imageSource))
                                {
                                    <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
                                }
                            </MudImage>
                        </MudItem>
                        <MudItem xs="6">
                            <MudFileUpload T="IBrowserFile" FilesChanged="UploadImage">
                                <ActivatorContent>
                                    <MudButton Variant="Variant.Filled"
                                               Color="Color.Primary"
                                               StartIcon="@Icons.Material.Filled.CloudUpload"
                                               Class="mb-2">
                                        Upload Image
                                    </MudButton>
                                </ActivatorContent>
                            </MudFileUpload>
                            <MudTextField Value="Record.Id" Label="ID" ReadOnly="true"/>
                            <MudTextField T="string" Value="Record.InternalReference" Label="Name" ReadOnly="true"/>
                            <MudTextField Value="Record.SizeInBytes" Label="Size (Bytes)" ReadOnly="true"/>
                            <MudTextField Value="Record.MimeType" Label="Mime type" ReadOnly="true"/>
                            <MudItem xs="3">
                                <MudTextField Value="Record.Width" Label="Width" ReadOnly="true"/>
                            </MudItem>
                            <MudItem xs="3">
                                <MudTextField Value="Record.Height" Label="Height" ReadOnly="true"/>
                            </MudItem>
                        </MudItem>
                    </MudGrid>
                </MudContainer>
            </MudTabs>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private MudDialogInstance MudDialog { get; set; }

    [Parameter] public ImageWithRelationsResponse? Record { get; set; }

    private bool Update { get; set; }

    private string _imageSource = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (Record == null)
        {
            Record = new ImageWithRelationsResponse();
        }
        else
        {
            Update = true;
            await LoadImageSourceAsync();
        }
    }

    private async Task LoadImageSourceAsync()
    {
        if (Record == null)
        {
            return;
        }

        var imageContent = await ImageService.GetImageContentAsync(Record.Id);
        if (!string.IsNullOrEmpty(imageContent))
        {
            _imageSource = $"data:image/jpeg;base64,{imageContent}";
            StateHasChanged();
        }
    }

    private async Task UploadImage(IBrowserFile? file)
    {
        if (file == null || Record == null)
        {
            return;
        }

        if (Update)
        {
            var image = await ImageService.PutImageAsync(Record.Id, file);
            if (image != null)
            {
                Snackbar.Add("Image updated.", Severity.Success);
            }
            else
            {
                Snackbar.Add("Error updating image.", Severity.Error);
            }
        }
        else
        {
            var image = await ImageService.PostImageAsync(file);
            if (image != null)
            {
                Snackbar.Add("Image added.", Severity.Success);
            }
            else
            {
                Snackbar.Add("Error adding image.", Severity.Error);
            }
        }

        await LoadImageSourceAsync();
    }

    private void Close()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }

}