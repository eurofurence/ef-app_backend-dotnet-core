name: Create and publish container image

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]'
      - 'v[0-9]+.[0-9]+.[0-9]-**'
env:
  HUSKY: 0

jobs:
  determine-build-version:
    runs-on: ubuntu-latest
    outputs:
      build-version: ${{ steps.build-version.outputs.build-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Determine build version from git tags
        id: build-version
        run: echo "build-version=$(git describe --tags --abbrev=0 | sed -e 's/^v//')" >> "$GITHUB_OUTPUT"; echo "GitHub Outputs:"; cat $GITHUB_OUTPUT

  call_build-and-push-image_nightly:
    if: startsWith(github.ref, 'refs/heads/')
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/docker-build-push-matrix.yml
    needs: [determine-build-version]
    with:
      image-tags: nightly
      build-args: "--build-arg BUILD_VERSION=${{ needs.determine-build-version.outputs.build-version }}-nightly"
    secrets:
      registry-pass: ${{ secrets.GITHUB_TOKEN }}

  call_build-and-push-image_prerelease:
    if: ${{ startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-') }}
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/docker-build-push-matrix.yml
    needs: [determine-build-version]
    with:
      image-tags: ${{ github.ref_name }}
      build-args: "--build-arg BUILD_VERSION=${{ needs.determine-build-version.outputs.build-version }}"
    secrets:
      registry-pass: ${{ secrets.GITHUB_TOKEN }}

  call_build-and-push-image_release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-') }}
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/docker-build-push-matrix.yml
    needs: [determine-build-version]
    with:
      image-tags: ${{ github.ref_name }} latest
      build-args: "--build-arg BUILD_VERSION=${{ needs.determine-build-version.outputs.build-version }}"
    secrets:
      registry-pass: ${{ secrets.GITHUB_TOKEN }}
